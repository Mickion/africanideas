@page "/login"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService

<div class="row mt-5">
    <div class="col-md-6 offset-md-3 mt-5">
        <div class="alert alert-info">
            <div class="row">
                <h6 class="text-center">Afi University</h6>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>Email</label>
                        <InputText @bind-Value="model.Email" class="form-control" />
                        <ValidationMessage For="@(() => model.Email)" />
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <InputText @bind-Value="model.Password" type="password" class="form-control" />
                        <ValidationMessage For="@(() => model.Password)" />
                    </div>
                    <div class="row mt-3">
                        <div class="col-8"></div>
                        <div class="col-2 float-end">
                            <a href="/student/registration" class="btn btn-primary btn-md active float-end" role="button" aria-pressed="true">Register</a>
                        </div>
                        <div class="col-2 float-end">
                            <button class="btn btn-primary float-end">
                                @if (loading)
                                {
                                    <span class="spinner-border spinner-border-sm mr-1"></span>
                                }
                                Login
                            </button>
                        </div>
                    </div>


                    @if (!string.IsNullOrEmpty(error))
                    {
                        <div class="alert alert-danger mt-3 mb-0">@error</div>
                    }
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {

    private bool loading;
    private string? error;
    private LoginRequest? model = new LoginRequest(string.Empty, string.Empty);

    protected async override void OnInitialized()
    {        
        await AuthenticationService.InitializeAsync();

        // redirect to home if already logged in
        if (AuthenticationService.User != null)
        {
            NavigationManager.NavigateTo("");
        }
    }

    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            await AuthenticationService.LoginAsync(model!.Email!, model!.Password!);
            var returnUrl = NavigationManager.QueryString("returnUrl") ?? "/";
            NavigationManager.NavigateTo(returnUrl);
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }
}