@attribute [Authorize]

@inject IToastService toastService
@inject ICourseService CourseService

@if (loading)
{
    <div class="spinner-border spinner-border-sm"></div>
}
else
{
    if (_courses!.Count() > 0)
    {
        <table class="table small table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>NQF Level</th>
                    <th>Duration</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in _courses!)
                {
                    <tr>
                        <td>@course.Name</td>
                        <td>@course.NQFLevel</td>
                        <td>@course.Duration</td>
                        <td><a href="/admin/coursestudents/@course.Id">View Students</a></td>
                    </tr>
                }
            </tbody>
        </table>

    }
    <div class="row" style="max-width:200px;">
        <a href="/admin/addcourse" class="btn btn-lg active oi oi-plus" role="button" aria-pressed="true">    Add Course</a>
    </div>
       
}

@code {
    private bool loading;
    private IEnumerable<CourseResponse>? _courses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            loading = true;
            _courses = await CourseService.GetAllUniversityCoursesAsync();
            loading = false;
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
            loading = false;
            StateHasChanged();
        }

    }
}
