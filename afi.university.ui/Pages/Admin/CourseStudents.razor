@page "/admin/coursestudents/{Id}"

@attribute [Authorize]
@inject IToastService toastService
@inject ICourseService CourseService

@if (_courseStudents == null)
{
    <p class="align-content-center" style="text-align:center;"> No students registered for this course, yet! </p>
}
else
{
    <h5>@_courseStudents.Name Student(s) </h5>

    <table class="table small table-striped">
        <thead>
            <tr>
                <th>FirstName</th>
                <th>LastName</th>
                <th>Email</th>
                <th>StudentNumber</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in _courseStudents.Students!)
            {
                <tr>
                    <td>@student.FirstName</td>
                    <td>@student.LastName</td>
                    <td>@student.Email</td>
                    <td>@student.StudentNumber</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    [Parameter]
    public string? Id { get; set; }

    private bool loading;
    private CourseStudentsResponse? _courseStudents;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(Id))
            {
                loading = true;
                Guid studentId = new Guid(Id);
                _courseStudents = await CourseService.GetCourseStudentsAsync(studentId);
                loading = false;
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }

}
